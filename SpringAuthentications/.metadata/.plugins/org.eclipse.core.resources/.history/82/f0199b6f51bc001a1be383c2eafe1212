package com.spring.jwt.auth.controller;

import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.AuthorityUtils;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.spring.jwt.auth.bean.User;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

@RestController
public class UserController {
	
	@PostMapping(value="user")
	public User login(@RequestParam("username") String username, @RequestParam("password") String password) {
		String token = getJWTToken(username);
		User user = new User();
		user.setUser(username);
		user.setToken(token);
		return new User();
	}

	private String getJWTToken(String username) {
		String secretKey = "MySecretKey";
		List<GrantedAuthority> grantedAuthorities = AuthorityUtils.commaSeparatedStringToAuthorityList("ROLE_USER");
		String token = Jwts.builder()
				.setId("jswtauth")
				.setSubject(username)
				.claim("authorities", 
						grantedAuthorities.stream().map(GrantedAuthority::getAuthority)
						.collect(Collectors.toList()))
				.setIssuedAt(new Date(System.currentTimeMillis()))
				.setExpiration(new Date(System.currentTimeMillis()+15000))
				.signWith(SignatureAlgorithm.HS512, secretKey.getBytes()).compact();
						
		return "Bearer "+token;
	}
}
